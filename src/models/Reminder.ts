import mongoose from 'mongoose';

const ReminderSchema = new mongoose.Schema({
  // User Reference
  userId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  
  // Related Entity References
  applicationId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Application'
  },
  jobId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Job'
  },
  
  // Reminder Details
  title: {
    type: String,
    required: true,
    trim: true
  },
  description: {
    type: String,
    trim: true
  },
  
  // Timing
  dueDate: {
    type: Date,
    required: true
  },
  dueTime: {
    type: String, // Format: "HH:MM"
    default: "09:00"
  },
  
  // Reminder Type
  type: {
    type: String,
    enum: [
      'follow_up',
      'interview_prep',
      'application_deadline',
      'interview_scheduled',
      'offer_response',
      'networking',
      'skill_development',
      'job_search',
      'custom'
    ],
    required: true
  },
  
  // Priority
  priority: {
    type: String,
    enum: ['low', 'medium', 'high', 'urgent'],
    default: 'medium'
  },
  
  // Status
  status: {
    type: String,
    enum: ['pending', 'completed', 'snoozed', 'cancelled'],
    default: 'pending'
  },
  
  // Completion
  completedAt: Date,
  completedNotes: String,
  
  // Snooze functionality
  snoozedUntil: Date,
  snoozeCount: {
    type: Number,
    default: 0
  },
  
  // Recurrence
  isRecurring: {
    type: Boolean,
    default: false
  },
  recurrencePattern: {
    type: String,
    enum: ['daily', 'weekly', 'monthly', 'custom']
  },
  recurrenceInterval: Number, // e.g., every 2 weeks
  recurrenceEndDate: Date,
  
  // Notifications
  notifications: [{
    type: {
      type: String,
      enum: ['email', 'push', 'sms', 'in_app']
    },
    timing: {
      type: String,
      enum: ['on_time', '15_min_before', '1_hour_before', '1_day_before', '1_week_before']
    },
    sent: {
      type: Boolean,
      default: false
    },
    sentAt: Date
  }],
  
  // Calendar Integration
  calendarEvent: {
    eventId: String,
    calendarId: String,
    provider: {
      type: String,
      enum: ['google', 'outlook', 'apple', 'other']
    },
    synced: {
      type: Boolean,
      default: false
    },
    lastSyncAt: Date
  },
  
  // Metadata
  tags: [String],
  color: {
    type: String,
    default: '#3b82f6'
  },
  
  // Automation
  isAutoGenerated: {
    type: Boolean,
    default: false
  },
  autoGenerationRule: String
}, {
  timestamps: true
});

// Indexes
ReminderSchema.index({ userId: 1, dueDate: 1 });
ReminderSchema.index({ userId: 1, status: 1 });
ReminderSchema.index({ userId: 1, type: 1 });
ReminderSchema.index({ applicationId: 1 });
ReminderSchema.index({ jobId: 1 });
ReminderSchema.index({ dueDate: 1, status: 1 });

export const Reminder = mongoose.models.Reminder || mongoose.model('Reminder', ReminderSchema);
export default Reminder;